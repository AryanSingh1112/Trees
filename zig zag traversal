/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {

         vector<vector<int>>result;
        if(root==NULL){
            return result;
        }
        
        queue<TreeNode*>nodesq;
        nodesq.push(root);
        bool lefttoright = true;
        
        while(!nodesq.empty()){
            int size = nodesq.size();
            vector<int>row(size);
            
            for(int i=0;i<size;i++){
                TreeNode* root = nodesq.front();
                nodesq.pop();
                
                int index = (lefttoright) ? i : (size-i-1);
                
                row[index] = root->val;
                
                if(root->left){
                    nodesq.push(root->left);
                }
                
                if(root->right){
                    nodesq.push(root->right);
                }
            }
            lefttoright = !lefttoright;
           result.push_back(row);

        }
        
        return result;
    }
        
};
